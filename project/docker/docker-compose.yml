version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --proxy-headers
    ports:
      - "8000:8000"
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/%2F"
      POSTGRES_HOST: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    restart: unless-stopped

  worker:
    build: .
    command: python worker.py
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/%2F"
      POSTGRES_HOST: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    restart: on-failure

  ui:
    build: .
    command: python app.py
    ports:
      - "7860:7860"
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/%2F"
      POSTGRES_HOST: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      api:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    restart: unless-stopped

volumes:
  pgdata: